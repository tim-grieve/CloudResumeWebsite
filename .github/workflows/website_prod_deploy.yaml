name: backend_prod_deploy
on:
  push:
    branches:
      - "main"
permissions:
  id-token: write
  contents: write

jobs:
  Prod_Deploy:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: bash
        working-directory: ./src
    
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with: 
          role-to-assume: arn:aws:iam::053127563287:role/GithubActionsRole
          aws-region: ca-central-1
#Checkout git repository for pipeline run
      - name: checkout
        uses: actions/checkout@v3
      
      #Install Terraform on runner vm
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.4

 #Configure environemnt for deployment  
      - name: Terraform INIT
        working-directory: ./src/terraform
        run: terraform init

      - name: Select Terraform default Workspace
        working-directory: ./src/terraform
        run: terraform workspace select default

      - name: Plan Prod_Deploy
        working-directory: ./src/terraform
        run: terraform plan -out deploy.tf

      - name: Apply changes to prod
        working-directory: ./src/terraform
        run: terraform apply deploy.tf

#Upload Website files
      - name: Website File Upload
        working-directory: ./src/Website
        run: aws s3 ls

  Cypress_End_To_End_Test:
    runs-on: ubuntu-latest
    needs: Prod_Deploy
    defaults:
      run:
        shell: bash
        working-directory: ./
  
    steps:
      - name: checkout
        uses: actions/checkout@v3
      
      - name: Install npm
        working-directory: Cypress_Tests
        run: npm install cypress --save-dev

      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          working-directory: Cypress_Tests
          spec: e2e/**.cy.js
          record: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
    